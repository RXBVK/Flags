{"version":3,"sources":["utils/Divider.js","components/Home/Home.js","components/Games/FlagToCountry/FlagToCountryField.js","utils/utils.js","utils/components/QuestionInfo/QuestionInfo.js","utils/components/GameFinished/GameFinished.js","components/Games/FlagToCountry/FlagToCountry.js","components/Navigation/Navigation.js","utils/context.js","App.js","reportWebVitals.js","index.js"],"names":["Divider","props","style","width","height","backgroundColor","color","Home","history","useHistory","className","onClick","push","FlagToCountryField","src","drawnCountry","flag","alt","answers","map","answer","id","value","e","handleAnswer","score","maxScore","gameTime","colors","QuestionInfo","result","country","getQuestion","finishTheGame","finishGameConditions","border","icon","faCheck","faTimes","name","cioc","capital","region","subregion","population","toLocaleString","currencies","currency","index","symbol","length","languages","language","faArrowRight","GameFinished","startTheGame","FlagToCountry","allCountries","useState","availableCountries","setAvailableCountries","gameStarted","setGameStarted","setDrawnCountry","setAnswers","setScore","goodAnswer","setGoodAnswer","gameResult","setGameResult","useEffect","randomCountry","Math","floor","random","key","tempAnswers","num","includes","getAnswers","array","i","j","temp","shuffleArray","splice","answerWasGood","target","Navigation","exact","to","faHome","faSlidersH","path","AppContext","createContext","App","setAllCountries","a","fetch","response","json","data","getData","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a63c119.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Divider(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `${props.width}%`,\r\n        height: `${props.height}px`,\r\n        backgroundColor: props.color || \"#03fc80\",\r\n      }}\r\n    ></div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"../../utils/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Flags</h1>\r\n      <Divider height={3} width={20} />\r\n      <h2>Test and improve your flags recognition skills!</h2>\r\n      <p>\r\n        In this game you will be able to educate and/or test yourself about\r\n        flags of countries.\r\n      </p>\r\n      <h3>Choose the game!</h3>\r\n      <div>\r\n        <button\r\n          className=\"button button--basic\"\r\n          onClick={() => history.push(\"/country-to-flag\")}\r\n        >\r\n          Match country to a flag\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FlagToCountryField(props) {\r\n  return (\r\n    <div className=\"game__container\">\r\n      <div className=\"question-flag__container\">\r\n        <img src={props.drawnCountry.flag} alt=\"flag of a country\" />\r\n      </div>\r\n      <div className=\"answers\">\r\n        {props.answers.map((answer, id) => {\r\n          return (\r\n            <button\r\n              className=\"button button--answer\"\r\n              value={answer}\r\n              onClick={(e) => props.handleAnswer(e)}\r\n              key={id}\r\n            >\r\n              {answer}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"game__score\">\r\n        Score: {props.score} / {props.maxScore}\r\n      </div>\r\n      <div className=\"game__time\">Time: {props.gameTime}</div>\r\n    </div>\r\n  );\r\n}\r\n","export const shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const colors = {\r\n  myGreen: \"#03fc80\",\r\n  myRed: \"#d42626\",\r\n};\r\n\r\nexport const getAnswers = (\r\n  key,\r\n  allCountries,\r\n  availableCountries,\r\n  randomCountry\r\n) => {\r\n  let tempAnswers = [];\r\n  while (tempAnswers.length < 3) {\r\n    let num = Math.floor(Math.random() * allCountries.length);\r\n    if (\r\n      !tempAnswers.includes(allCountries[num][key] && num !== randomCountry)\r\n    ) {\r\n      tempAnswers.push(allCountries[num][key]);\r\n    }\r\n  }\r\n  tempAnswers.push(availableCountries[randomCountry][key]);\r\n  return tempAnswers;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  faCheck,\r\n  faTimes,\r\n  faArrowRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Divider from \"../../Divider\";\r\nimport { colors } from \"../../utils\";\r\nimport \"./QuestionInfo.css\";\r\n\r\nexport default function QuestionInfo({\r\n  result,\r\n  country,\r\n  getQuestion,\r\n  finishTheGame,\r\n  finishGameConditions,\r\n}) {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          border: `3px solid ${result ? colors.myGreen : colors.myRed}`,\r\n        }}\r\n        className=\"answer__result\"\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={result ? faCheck : faTimes}\r\n          className=\"answer__result__icon\"\r\n          style={{\r\n            border: `3px solid ${result ? colors.myGreen : colors.myRed}`,\r\n            color: result ? colors.myGreen : colors.myRed,\r\n          }}\r\n        />\r\n        <h2 className=\"answer__result__header\">\r\n          {result === false ? \"Wrong answer\" : \"Good answer!\"}\r\n        </h2>\r\n        <img\r\n          src={country.flag}\r\n          alt=\"flag of a country\"\r\n          className=\"answer__result__flag\"\r\n        />\r\n        <h2 className=\"answer__result__info__header\">\r\n          {country.name} ({country.cioc})\r\n        </h2>\r\n        <div className=\"answer__result__info\">\r\n          <div className=\"answer__result__info__line\">\r\n            <p>Capital</p>\r\n            <p>{country.capital}</p>\r\n          </div>\r\n          <Divider\r\n            height={1}\r\n            width={100}\r\n            color={result ? colors.myGreen : colors.myRed}\r\n          />\r\n          <div className=\"answer__result__info__line\">\r\n            <p>Region</p>\r\n            <p>\r\n              {country.region} ({country.subregion})\r\n            </p>\r\n          </div>\r\n          <Divider\r\n            height={1}\r\n            width={100}\r\n            color={result ? colors.myGreen : colors.myRed}\r\n          />\r\n          <div className=\"answer__result__info__line\">\r\n            <p>Population</p>\r\n            <p>{country.population.toLocaleString()}</p>\r\n          </div>\r\n          <Divider\r\n            height={1}\r\n            width={100}\r\n            color={result ? colors.myGreen : colors.myRed}\r\n          />\r\n          <div className=\"answer__result__info__line\">\r\n            <p>Currencies</p>\r\n            <p>\r\n              {country.currencies.map((currency, index) => {\r\n                return `${currency.name} (${currency.symbol})${\r\n                  index === country.currencies.length - 1 ? \"\" : \" - \"\r\n                }`;\r\n              })}\r\n            </p>\r\n          </div>\r\n          <Divider\r\n            height={1}\r\n            width={100}\r\n            color={result ? colors.myGreen : colors.myRed}\r\n          />\r\n          <div className=\"answer__result__info__line\">\r\n            <p>Languages</p>\r\n            <p>\r\n              {country.languages.map((language, index) => {\r\n                return `${language.name}${\r\n                  index === country.languages.length - 1 ? \"\" : \" - \"\r\n                }`;\r\n              })}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          finishGameConditions ? finishTheGame() : getQuestion();\r\n        }}\r\n        className=\"button--continue\"\r\n      >\r\n        <FontAwesomeIcon icon={faArrowRight} />\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../../components/GameFinished/GameFinished.css\";\r\n\r\nexport default function GameFinished(props) {\r\n  return (\r\n    <div className=\"game-finished__container\">\r\n      <h1>{props.result ? \"Congratulations!\" : \"Unfortunately :(\"}</h1>\r\n      <p>\r\n        {props.result\r\n          ? \"You successfully finished the game!\"\r\n          : \"You need some more practice\"}\r\n      </p>\r\n      <p>Your time: {props.gameTime}</p>\r\n      <p>\r\n        Your score: {props.score} / {props.maxScore}\r\n      </p>\r\n      <button\r\n        className=\"button button--basic\"\r\n        onClick={() => props.startTheGame()}\r\n      >\r\n        Try again!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FlagToCountryField from \"./FlagToCountryField\";\r\nimport { shuffleArray, getAnswers } from \"../../../utils/utils\";\r\nimport QuestionInfo from \"../../../utils/components/QuestionInfo/QuestionInfo\";\r\nimport GameFinished from \"../../../utils/components/GameFinished/GameFinished\";\r\nimport \"./FlagToCountry.css\";\r\n\r\nexport default function FlagToCountry({ allCountries }) {\r\n  const [availableCountries, setAvailableCountries] = useState([]);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [drawnCountry, setDrawnCountry] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [goodAnswer, setGoodAnswer] = useState(null);\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const [gameTime, setGameTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setAvailableCountries([...allCountries]);\r\n  }, []);\r\n\r\n  const startTheGame = () => {\r\n    setScore(0);\r\n    setGameResult(null);\r\n    setGameStarted(true);\r\n    getQuestion();\r\n  };\r\n\r\n  const getQuestion = () => {\r\n    setGoodAnswer(null);\r\n    let randomCountry = Math.floor(Math.random() * availableCountries.length);\r\n    setDrawnCountry(availableCountries[randomCountry]);\r\n\r\n    let answers = getAnswers(\r\n      \"name\",\r\n      allCountries,\r\n      availableCountries,\r\n      randomCountry\r\n    );\r\n    setAnswers(shuffleArray(answers));\r\n\r\n    let temp = [...availableCountries];\r\n    temp.splice(randomCountry, 1);\r\n    setAvailableCountries(temp);\r\n  };\r\n\r\n  const handleAnswer = (e) => {\r\n    let answer = e.target.value;\r\n    let answerWasGood = answer === drawnCountry.name;\r\n    if (answerWasGood) setScore(score + 1);\r\n    setGoodAnswer(answerWasGood);\r\n  };\r\n\r\n  const finishTheGame = () => {\r\n    goodAnswer === false ? setGameResult(false) : setGameResult(true);\r\n  };\r\n\r\n  if (gameResult !== null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <GameFinished\r\n          result={gameResult}\r\n          gameTime={gameTime}\r\n          score={score}\r\n          maxScore={allCountries.length}\r\n          startTheGame={startTheGame}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (goodAnswer !== null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <QuestionInfo\r\n          result={goodAnswer}\r\n          country={drawnCountry}\r\n          getQuestion={getQuestion}\r\n          finishTheGame={finishTheGame}\r\n          availableCountries={availableCountries}\r\n          goodAnswer={goodAnswer}\r\n          finishGameConditions={availableCountries.length === 0 || !goodAnswer}\r\n          gameTime={gameTime}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!gameStarted ? (\r\n        <>\r\n          <h1>Match country to a flag</h1>\r\n          <button\r\n            className=\"button button--basic\"\r\n            onClick={() => startTheGame()}\r\n          >\r\n            Start the game\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <FlagToCountryField\r\n          drawnCountry={drawnCountry}\r\n          answers={answers}\r\n          getQuestion={getQuestion}\r\n          handleAnswer={handleAnswer}\r\n          score={score}\r\n          maxScore={allCountries.length}\r\n          gameTime={gameTime}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, NavLink } from \"react-router-dom\";\r\nimport { faHome, faSlidersH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Divider from \"../../utils/Divider\";\r\nimport Home from \"../Home/Home\";\r\nimport FlagToCountry from \"../Games/FlagToCountry/FlagToCountry\";\r\nimport \"./Navigation.css\";\r\n\r\nexport default function Navigation(props) {\r\n  return (\r\n    <>\r\n      <div className=\"navigation\">\r\n        <header>\r\n          <h1 className=\"navigation__logo\">Flags</h1>\r\n        </header>\r\n        <Divider width={60} height={3} />\r\n        <div className=\"navigation__menu\">\r\n          <NavLink exact to=\"/\">\r\n            <FontAwesomeIcon icon={faHome} />\r\n          </NavLink>\r\n        </div>\r\n        <FontAwesomeIcon icon={faSlidersH} />\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/country-to-flag\">\r\n          <FlagToCountry allCountries={props.allCountries} />\r\n        </Route>\r\n        {/* <Route>\r\n                        <NotFound />\r\n                    </Route> */}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext([]);\r\n","import Navigation from \"./components/Navigation/Navigation\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { AppContext } from \"./utils/context\";\n\nfunction App() {\n  const [allCountries, setAllCountries] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      let response = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      let data = await response.json();\n      setAllCountries(data);\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <AppContext.Provider value={allCountries}>\n          {allCountries.length > 0 ? (\n            <Navigation allCountries={allCountries} />\n          ) : (\n            <h1>Error</h1>\n          )}\n        </AppContext.Provider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}